#include<bits/stdc++.h>
#define endl "\n"
#define in long long
#define dub double
#define dubb long double
#define pb push_back
using namespace std;

//in vis[10000],dis[10000];
map<pair<in,in>,vector<pair<in,in>>>m;
map<pair<in,in>,in>vis,dis;
map<pair<in,in>,pair<in,in>>par;
vector<pair<in,in>>seq;
void bfs(pair<in,in>st)
{
    par[st]={-1,-1};
    dis[st]=0;
    vis[st]=1;
    queue<pair<in,in>>q;
    q.push(st);
    while(!q.empty())
    {
        pair<in,in> cur=q.front();
        seq.push_back(cur);
        q.pop();
        for(auto it=m[cur].begin();it!=m[cur].end();it++)
        {
            if(vis[*it]) continue;
            vis[*it]=1;
            dis[*it]=dis[cur]+1;
            par[*it]=cur;
            q.push(*it);
        }

    }
}
int main()
{
    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
    in i,j,k,n,c=0,s=0,f=0,t,e,x,y;
    for (i=0;i<8;i++){
        for (j=0;j<8;j++){
            if(i-1>=0 && j-2>=0){
                m[{i,j}].pb({i-1,j-2});
            }
            if(i-2>=0 && j-1>=0){
                m[{i,j}].pb({i-2,j-1});
            }
            if(i-1>=0 && j+2<8){
                m[{i,j}].pb({i-1,j+2});
            }
            if(i-2>=0 && j+1<8){
                m[{i,j}].pb({i-2,j+1});
            }
            if(i+1<8 && j-2>=0){
                m[{i,j}].pb({i+1,j-2});
            }
            if(i+2<8 && j-1>=0){
                m[{i,j}].pb({i+2,j-1});
            }
            if(i+1<8 && j+2<8){
                m[{i,j}].pb({i+1,j+2});
            }
            if(i+2<8 && j+1<8){
                m[{i,j}].pb({i+2,j+1});
            }
        }
    }
    cin>>t;
    while(t--){
        string a,b;
        cin>>a>>b;
        x=a[0]-'A';
        y=a[1]-'1';
        pair<in,in>p={x,y},q;
        bfs(p);
        vector<pair<in,in>>v;
        q.first=b[0]-'A';
        q.second=b[1]-'1';
        while(q.first!=-1 || q.second!=-1){
            v.pb(par[q]);
            q=par[q];
        }
        cout<<v.size()-1<<"\n";
        for(i=v.size()-2;i>=0;i--){
            char ch=v[i].first+'A';
            cout<<ch<<v[i].second+1<<"->";
        }
//        char ch=q.first+'A';
        cout<<b<<"\n\n";
//        m.clear();
        par.clear();
        vis.clear();
        dis.clear();
        seq.clear();
    }
    return 0;
}